<?php
/**
 * @file main acquia slider module file
 */
define('SLIDER_LIST_PATH', ACQUIA_MENU_PATH . '/ac-slider');
/**
 * @file main module file
 */

/**
 * Implements hook_menu()
 *
 */
function ac_slider_menu() {
	$items = array();
	$module_path = drupal_get_path('module', 'ac_slider');

	$items[SLIDER_LIST_PATH] = array(
		'title' => t('Acquia Sliders'),
		'page callback' => 'ac_slider_admin_overview',
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'description' => t('Manage all sliders'),
	);
	
	$items[SLIDER_LIST_PATH . '/manage'] = array(
		'title' => t('Manage'),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 0,
  );
	
	$items[SLIDER_LIST_PATH . '/import-export'] = array(
		'title' => t('Import & Export'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('ac_slider_import_export_form'),
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'description' => t('Import and Export slider'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
	);

	$items[SLIDER_LIST_PATH . '/export-data'] = array(
		'page callback' => 'ac_slider_export_data',
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'type' => MENU_CALLBACK,
	);

	$items[SLIDER_LIST_PATH . '/create'] = array(
		'title' => 'Add new Acquia Slider',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('ac_slider_configure_form'),
		'access arguments' => array('administer ac_slider'),
		'type' => MENU_LOCAL_ACTION,
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
	);
	
	$items[SLIDER_LIST_PATH . '/%ac_slider_ids'] = array(
		'description' => 'Edit existing slider and reorganize slides.',
		'page callback' => 'ac_slider_manage',
		'page arguments' => array(3),
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'type' => MENU_NORMAL_ITEM,
	);
	
	$items[SLIDER_LIST_PATH . '/%ac_slider_ids/edit'] = array(
		'title' => t('Edit'),
		'description' => t('Re-organize slides and configure slides.'),
		'page callback' => 'ac_slider_manage',
		'access callback' => 'user_access',
		'page arguments' => array(3, 4),
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
	);

	$items[SLIDER_LIST_PATH . '/slider/delete/confirm'] = array(
		'page callback' => 'drupal_get_form',
		'page arguments' => array('confirm_delete_form'),
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'type' => MENU_CALLBACK,

	);
	
	$items[SLIDER_LIST_PATH . '/slide/delete'] = array(
		'page callback' => 'delete_slide',
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'type' => MENU_CALLBACK,
	);
	
	$items[SLIDER_LIST_PATH . '/%ac_slider_ids/clone'] = array(
		'description' => t('Create new slider from existing slider.'),
		'page callback' => 'ac_slider_clone',
		'page arguments' => array(3),
		'access arguments' => array('administer ac_slider'),
		'file path' => $module_path . '/includes',
		'file' => 'ac_slider.admin.inc',
		'type' => MENU_CALLBACK,
	);
	
	return $items;
}

/**
 * Implements hook_permission().
 */
function ac_slider_permission() {
  return array(
    'administer ac_slider' => array(
      'title' => t('Administer acquia sliders'),
      'description' => t('Administer acquia sliders.'),
    ),
  );
}

/**
 * Implements hook_theme()
 *
 */
function ac_slider_theme() {
	$module_path = drupal_get_path('module', 'ac_slider');
	$themes = array();

	$themes['ac_slider_overview'] = array(
		'file' => 'includes/ac_slider.admin.inc',
	);

	return $themes;
}

/**
 * Implementation of hook_ac_slider_info() 
 */ 
function ac_slider_ac_sliders_info() {
	//return array(
	//	'parallaxslider' => array(
	//		'#title' => t('parallaxSlider'),
	//		'#description' => t('Facny CSS3 animated and parallax slider'),
	//		'#class' => 'parallaxSlider',
	//		'#file' => 'parallaxslider.class.php',
	//		'#path' => drupal_get_path('module', 'ac_slider') . '/includes',
	//		/*'#settings' => array(
	//			'#form' => 'layerslider_settings_form', // slide settings form
	//			'#submit' => array('layerslider_settings_form_submit'), // submit 
	//		),*/
	//		'#slides' => array(
	//			'#edit' => 'parallaxslider_slides_edit', // slides edit form
	//		),
	//		'#import_export' => array(
	//			'#import' => 'parallaxslider_import_data', // import function
	//			'#export' => 'parallaxslider_export_slider', // export slider function
	//		),
	//		'#theme' => 'parallaxslider',
	//	),
	//);
}

/**
 * Implements hook_block_info().
 */
function ac_slider_block_info() {
	acquia_include('slider', 'ac_slider');
	
  $blocks = array();
  $sliders = acquiaSlider::get_all();

  if (!empty($sliders)) {
    foreach ($sliders as $slider) {
      $id_block = $slider->slid;
      $blocks[$id_block] = array();
      $blocks[$id_block]['info'] = !empty($slider->title) ? '[acquiaSlider] ' . $slider->title : t('[acquiaSlider] #') . $id_block;
      $blocks[$id_block]['cache'] = DRUPAL_CACHE_GLOBAL;
    }
  }
	
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ac_slider_block_view($delta = '') {
  $blocks = array();
  if (is_numeric($delta)) {
		acquia_include('utility', 'ac_slider');
		acquia_include('slider', 'ac_slider');
    if ($slider = acquiaSlider::get_by_id((int)$delta)) {
				$blocks['subject'] = isset($slider->settings['disable_title']) && $slider->settings['disable_title'] == 'on' ? '' : $slider->title;
				$blocks['content']['#theme'] = (string) get_slider_info($slider->type, null, '#theme');
				$blocks['content']['#slider'] = $slider->type;
				$blocks['content']['#slid'] = $delta;	
    }
  }

  return $blocks;
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function ac_slider_contextual_links_view_alter(&$element, &$items) {
	acquia_include('utility', 'ac_slider');
  if (isset($element['#element']['#block']) && isset($element['#element']['#slider']) && in_array($element['#element']['#slider'], array_keys(get_slider_types())) && is_numeric($element['#element']['#block']->delta)) {
    $id = $element['#element']['#block']->delta;
    $element['#links']['edit-slider'] = array(
        'title' => t('Edit slider'),
        'href' => url(SLIDER_LIST_PATH . '/'.$id.'/edit', array('absolute' => TRUE)),
    );
  }
}

/**
 * Implements hook_load for wildcard
 */
function  ac_slider_ids_load($ids) {
	if (is_numeric($ids)) {
		$ids = array($ids);
	}
	elseif (preg_match('/^([0-9]+,){1,5}[0-9]+$/', $ids)) {
		$ids = explode(',', $ids);
	}
	return $ids;
}


/**
 * implementing hook_library()
 */
function ac_slider_library() {
	$libs_path = acquia_variable_get('libs_path', 'sites/all/libraries');
	$path = drupal_get_path('module', 'ac_slider');

	$libraries['acquia_slider.admin'] = array(
    'title' => 'elastic_slider',
    'website' => 'http://acquiathemes.com',
		'version' => '1.0',
    'js' => array(
      $path . '/js/admin.js' => array(),
    ),
    'css' => array(
      $path . '/css/acquia-slider-admin.css' => array(),
    ),
  );

  return $libraries;
}